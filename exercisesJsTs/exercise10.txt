in 2 words how reduce method work?
The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value

we have there previous, total value and current value.

parameters ( total, currentValue, currentIndex, arr )

// sumUp these element [98,45,33,47,100,80]
const arr = [98,45,33,47,100,80];
const result = arr.reduce((total, currElem) => total + currElem);
console.log('result', result);

// same with initial value 100
const arr = [98,45,33,47,100,80, 6];
const result = arr.reduce((total, currElem, index) => {
  console.log('index', index);
  return total + currElem 
}, 100);
console.log('result', result);

// reactExample
export default function App() {
  const course = {
    name: "Half Stack application development",
    parts: [
      {
        name: "Fundamentals of React",
        exercises: 10,
        id: 1
      },
      {
        name: "Using props to pass data",
        exercises: 7,
        id: 2
      },
      {
        name: "State of a component",
        exercises: 14,
        id: 3
      }
    ]
  };

  const totalExercises = course.parts.reduce((total, currValue) => {
    const exercisesNumber = total + currValue.exercises;
    return exercisesNumber;
  }, 0);

  console.log("totalExercises", totalExercises);



// removesDuplicates

const duplicatedsArr = [1, 5, 6, 5, 7, 1, 6, 8, 9, 7];

const resultArray:any = [];

const result = duplicatedsArr.reduce((total, currValue) => {
    if(!total.includes(currValue)) {
        total.push(currValue);
    }
    return total;
}, resultArray)

console.log('result', result);


// group by property

const result = [
    {subject: 'Physics', marks: 41},
    {subject: 'Chemistry', marks: 59},
    {subject: 'Pure Maths', marks: 36},
    {subject: 'Applied Maths', marks: 90},
    {subject: 'English', marks: 64},
];


const sortedValues = {
    bigger: [],
    smaller: []
}

const groupedResult = result.reduce((total:any, item:any) => {
    if(item.marks > 50) total.bigger.push(item);
    else total.smaller.push(item);

    return total;
}, sortedValues);


console.log('groupedResult', groupedResult);


// flatten them into a single array

var arrays = [
    ["1", "2", "3"],
    [true],
    [4, 5, 6]
];

const result = arrays.reduce((previousValue:any, currValue) => {
    return previousValue.concat(currValue);
}, []);

console.log('result', result);

// check how many persones voted

var voters = [
    {name:'Bob' , age: 30, voted: true},
    {name:'Jake' , age: 32, voted: true},
    {name:'Kate' , age: 25, voted: false},
    {name:'Sam' , age: 20, voted: false},
    {name:'Phil' , age: 21, voted: true},
    {name:'Ed' , age:55, voted:true},
    {name:'Tami' , age: 54, voted:true},
    {name: 'Mary', age: 31, voted: false},
    {name: 'Becky', age: 43, voted: false},
    {name: 'Joey', age: 41, voted: true},
    {name: 'Jeff', age: 30, voted: true},
    {name: 'Zack', age: 19, voted: false}
];

const result = voters.reduce((previousValue, currValue) => {
    if(currValue.voted) {
        previousValue++
    }

    return previousValue;
}, 0);

console.log('result', result);

// check number of voter in diff age group, 18-25, 26-35, 36-55

var voters = [
    {name:'Bob' , age: 30, voted: true},
    {name:'Jake' , age: 32, voted: true},
    {name:'Kate' , age: 25, voted: false},
    {name:'Sam' , age: 20, voted: false},
    {name:'Phil' , age: 21, voted: true},
    {name:'Ed' , age:55, voted:true},
    {name:'Tami' , age: 54, voted:true},
    {name: 'Mary', age: 31, voted: false},
    {name: 'Becky', age: 43, voted: false},
    {name: 'Joey', age: 41, voted: true},
    {name: 'Jeff', age: 30, voted: true},
    {name: 'Zack', age: 19, voted: false}
];

const voteResults = {
    numyoungVoters: 0,
    numVotesYoung: 0,
    numMidVoters: 0,
    numVotesMidVoters: 0,
    numAgedVoters: 0,
    numVotesAgeVoterss: 0,
}

const result = voters.reduce((prevValue:any, currValue:any) => {
    if(currValue.age < 26) {
        prevValue.numyoungVoters++;
        if(currValue.voted) prevValue.numVotesYoung++
    }
    if(currValue.age > 25 && currValue.age < 36) {
        prevValue.numMidVoters++;
        if(currValue.voted) prevValue.numVotesMidVoters++
    }
    if(currValue.age > 35) {
        prevValue.numAgedVoters++;
        if(currValue.voted) prevValue.numVotesAgeVoterss++
    }

    return prevValue;
}, voteResults);

console.log('resulte', result);